version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  front-end-testing:
    run_tests:
      working_directory: ~/FrontEnd
      docker:
        - image: circleci/node:14.8.0
      steps:
        - checkout
        - run:
            name: update-npm
            command: 'sudo npm install -g npm@latest'
        - restore_cache:
            key: dependency-cache-{{ checksum "package.json" }}
        - run:
            name: npm-install
            command: npm install
        - save_cache:
            key: dependency-cache-{{ checksum "package.json" }}
            paths:
              - ./node_modules
        - run:
            name: test
            command: npm test
  
  back-end-build_and_deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      ECR_REPOSITORY_NAME: fri-10-30-team3
      FULL_IMAGE_NAME: 803415849016.dkr.ecr.us-east-1.amazonaws.com/fri-10-30-team3:latest
    steps:
      - checkout
      - setup_remote_docker
#       - run:
#           name: Setup common environment variables
#           command: |
#             echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
#             echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest"' >> $BASH_ENV


      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
            # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-demo-java-spring-{{ checksum "BackEnd/pom.xml" }}

      - run: cd ./BackEnd && mvn dependency:go-offline # gets the project dependencies
      - save_cache: # saves the project dependencies
          paths:
              - ~/BackEnd/.m2
          key: circleci-demo-java-spring-{{ checksum "BackEnd/pom.xml" }}

      - run: cd ./BackEnd && mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
            # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
            path: BackEnd/target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
            # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            path: BackEnd/target/major-project-team3-0.0.1.jar
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Build image
          command: |
            cd ./BackEnd && docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            cd ./BackEnd && aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 803415849016.dkr.ecr.us-east-1.amazonaws.com
            docker push $FULL_IMAGE_NAME
workflows:
  testing_suite:
    jobs:
      - front-end-testing:
          filters:
            branches:
              only: frontend-docker
      - back-end-build_and_deploy:
          filters:
            branches:
              only: master